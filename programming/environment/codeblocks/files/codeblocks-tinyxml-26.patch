From 3d54ab8b5326e4b29167f45c98908fcd1e4325f2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Dan=20Hor=C3=A1k?= <dan@danny.cz>
Date: Sat, 22 May 2010 16:40:54 +0200
Subject: [PATCH 23/23] update for tinyxml 2.6

---
 src/tools/cb_share_config/mainframe.cpp |   14 +++++++-------
 1 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/tools/cb_share_config/mainframe.cpp b/src/tools/cb_share_config/mainframe.cpp
index f43b15c..9e3225c 100644
--- a/src/tools/cb_share_config/mainframe.cpp
+++ b/src/tools/cb_share_config/mainframe.cpp
@@ -505,7 +505,7 @@ void MainFrame::OfferConfig(TiXmlDocument* config, wxListBox* listbox,
   TiXmlNode* child = NULL;
   for (child = cfgroot->FirstChild(); child; child = child->NextSibling())
   {
-    if (child->Type()==TiXmlNode::ELEMENT)
+    if (child->Type()==TiXmlNode::TINYXML_ELEMENT)
     {
       OfferNode(&child, listbox, nodes);
     }
@@ -524,7 +524,7 @@ void MainFrame::OfferNode(TiXmlNode** node,               wxListBox* listbox,
     TiXmlNode* child = NULL;
     for (child = (*node)->FirstChild(); child; child = child->NextSibling())
     {
-      if (child->Type()==TiXmlNode::ELEMENT)
+      if (child->Type()==TiXmlNode::TINYXML_ELEMENT)
         OfferNode(&child, listbox, nodes, wxT("<code_completion>")); // recursive call
     }
   }
@@ -553,7 +553,7 @@ void MainFrame::OfferNode(TiXmlNode** node,               wxListBox* listbox,
     TiXmlNode* child = NULL;
     for (child = (*node)->FirstChild(); child; child = child->NextSibling())
     {
-      if (child->Type()==TiXmlNode::ELEMENT)
+      if (child->Type()==TiXmlNode::TINYXML_ELEMENT)
         OfferNode(&child, listbox, nodes, wxT("<compiler>")); // recursive call
     }
   }
@@ -562,7 +562,7 @@ void MainFrame::OfferNode(TiXmlNode** node,               wxListBox* listbox,
     TiXmlNode* child = NULL;
     for (child = (*node)->FirstChild(); child; child = child->NextSibling())
     {
-      if (child->Type()==TiXmlNode::ELEMENT)
+      if (child->Type()==TiXmlNode::TINYXML_ELEMENT)
         OfferNode(&child, listbox, nodes, wxT("<editor>")); // recursive call
     }
   }
@@ -571,7 +571,7 @@ void MainFrame::OfferNode(TiXmlNode** node,               wxListBox* listbox,
     TiXmlNode* child = NULL;
     for (child = (*node)->FirstChild(); child; child = child->NextSibling())
     {
-      if (child->Type()==TiXmlNode::ELEMENT)
+      if (child->Type()==TiXmlNode::TINYXML_ELEMENT)
         OfferNode(&child, listbox, nodes, wxT("<project_manager>")); // recursive call
     }
   }
@@ -595,7 +595,7 @@ void MainFrame::OfferNode(TiXmlNode** node,               wxListBox* listbox,
     TiXmlNode* child = NULL;
     for (child = (*node)->FirstChild(); child; child = child->NextSibling())
     {
-      if (child->Type()==TiXmlNode::ELEMENT)
+      if (child->Type()==TiXmlNode::TINYXML_ELEMENT)
         OfferNode(&child, listbox, nodes, wxT("<compiler><sets>")); // recursive call
     }
   }
@@ -605,7 +605,7 @@ void MainFrame::OfferNode(TiXmlNode** node,               wxListBox* listbox,
     TiXmlNode* child = NULL;
     for (child = (*node)->FirstChild(); child; child = child->NextSibling())
     {
-      if (child->Type()==TiXmlNode::ELEMENT)
+      if (child->Type()==TiXmlNode::TINYXML_ELEMENT)
         OfferNode(&child, listbox, nodes, wxT("<compiler><user_sets>")); // recursive call
     }
   }
-- 
1.6.6.1

