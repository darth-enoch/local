--- mozilla-release-orig/xpcom/io/nsAppFileLocationProvider.cpp	2012-11-20 04:41:02.000000000 +0200
+++ mozilla-release/xpcom/io/nsAppFileLocationProvider.cpp	2012-11-25 16:26:56.311000030 +0200
@@ -66,6 +66,10 @@
 #define PLUGINS_DIR_NAME            NS_LITERAL_CSTRING("plugins")
 #define SEARCH_DIR_NAME             NS_LITERAL_CSTRING("searchplugins")
 
+#ifndef PARDUS_NS_PLUGINS_DIR
+#define PARDUS_NS_PLUGINS_DIR "/usr/lib/nsbrowser/plugins/"
+#endif
+
 //*****************************************************************************
 // nsAppFileLocationProvider::Constructor/Destructor
 //*****************************************************************************
@@ -218,6 +222,10 @@
         rv = NS_ERROR_FAILURE;
 #endif
     }
+    else if (nsCRT::strcmp(prop, PARDUS_NS_PLUGINS_DIR) == 0)
+    {
+        rv = NS_NewNativeLocalFile(nsDependentCString(PARDUS_NS_PLUGINS_DIR), PR_TRUE, getter_AddRefs(localFile));
+    }
 #endif
 #endif
     else if (nsCRT::strcmp(prop, NS_APP_SEARCH_DIR) == 0)
@@ -529,7 +537,7 @@
         *_retval = new nsAppDirectoryEnumerator(this, keys);
 #else
 #ifdef XP_UNIX
-        static const char* keys[] = { nullptr, NS_USER_PLUGINS_DIR, NS_APP_PLUGINS_DIR, NS_SYSTEM_PLUGINS_DIR, nullptr };
+        static const char* keys[] = { nsnull, PARDUS_NS_PLUGINS_DIR, NS_USER_PLUGINS_DIR, NS_APP_PLUGINS_DIR, NS_SYSTEM_PLUGINS_DIR, nullptr };
 #else
         static const char* keys[] = { nullptr, NS_USER_PLUGINS_DIR, NS_APP_PLUGINS_DIR, nullptr };
 #endif
