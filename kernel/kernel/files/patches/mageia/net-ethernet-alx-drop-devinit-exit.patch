--- ./drivers/net/ethernet/atheros/alx/alx_main.c.orig	2013-01-16 18:13:57.000000000 +0200
+++ ./drivers/net/ethernet/atheros/alx/alx_main.c	2013-01-16 18:39:12.844444812 +0200
@@ -1946,7 +1946,7 @@ static void alx_reset_interrupt_mode(str
 }
 
 
-static int __devinit alx_init_adapter_special(struct alx_adapter *adpt)
+static int alx_init_adapter_special(struct alx_adapter *adpt)
 {
 	switch (adpt->hw.mac_type) {
 	case alx_mac_l1f:
@@ -2001,7 +2001,7 @@ init_alf_adapter:
 /*
  * alx_init_adapter
  */
-static int __devinit alx_init_adapter(struct alx_adapter *adpt)
+static int alx_init_adapter(struct alx_adapter *adpt)
 {
 	struct alx_hw *hw   = &adpt->hw;
 	struct pci_dev	*pdev = adpt->pdev;
@@ -3449,7 +3449,7 @@ static const struct net_device_ops alx_n
 /*
  * alx_init - Device Initialization Routine
  */
-static int __devinit alx_init(struct pci_dev *pdev,
+static int alx_init(struct pci_dev *pdev,
 		       const struct pci_device_id *ent)
 {
 	struct net_device *netdev;
@@ -3743,7 +3743,7 @@ err_alloc_device:
 /*
  * alx_remove - Device Removal Routine
  */
-static void __devexit alx_remove(struct pci_dev *pdev)
+static void alx_remove(struct pci_dev *pdev)
 {
 	struct alx_adapter *adpt = pci_get_drvdata(pdev);
 	struct alx_hw *hw = &adpt->hw;
@@ -3865,7 +3865,7 @@ static struct pci_driver alx_driver = {
 	.name        = alx_drv_name,
 	.id_table    = alx_pci_tbl,
 	.probe       = alx_init,
-	.remove      = __devexit_p(alx_remove),
+	.remove      = alx_remove,
 	.shutdown    = alx_shutdown,
 	.err_handler = &alx_err_handler,
 	.driver.pm   = ALX_PM_OPS,
