diff -ur rtv-Stage-c318423/libstageplugin/p_graphics.cc rtv-Stage-c318423-fixed/libstageplugin/p_graphics.cc
--- rtv-Stage-c318423/libstageplugin/p_graphics.cc	2012-01-12 00:06:07.000000000 -0200
+++ rtv-Stage-c318423-fixed/libstageplugin/p_graphics.cc	2012-01-26 23:04:30.351585261 -0200
@@ -232,8 +232,11 @@
 			PLAYER_GRAPHICS2D_CMD_POINTS, this->addr)
 			|| Message::MatchMessage(hdr, PLAYER_MSGTYPE_CMD,
 					PLAYER_GRAPHICS2D_CMD_POLYLINE, this->addr)
+// Draw Multiline is new in Player 3.1, this ifdef allows Stage to build against older versions of Player
+#if defined PLAYER_GRAPHICS2D_CMD_MULTILINE
 			|| Message::MatchMessage(hdr, PLAYER_MSGTYPE_CMD,
                                         PLAYER_GRAPHICS2D_CMD_MULTILINE, this->addr)
+#endif
 			|| Message::MatchMessage(hdr, PLAYER_MSGTYPE_CMD,
 					PLAYER_GRAPHICS2D_CMD_POLYGON, this->addr)) {
 		Message msg(*hdr, data);
@@ -273,7 +276,8 @@
 		glEnd();
 	}
 		break;
-
+// Draw Multiline is new in Player 3.1, this ifdef allows Stage to build against older versions of Player
+#if defined PLAYER_GRAPHICS2D_CMD_MULTILINE
         case PLAYER_GRAPHICS2D_CMD_MULTILINE: {
                 player_graphics2d_cmd_multiline_t
                                 & data =
@@ -286,7 +290,7 @@
         }
                 break;
 
-
+#endif
 
 
 
diff -ur rtv-Stage-c318423/libstageplugin/p_simulation.cc rtv-Stage-c318423-fixed/libstageplugin/p_simulation.cc
--- rtv-Stage-c318423/libstageplugin/p_simulation.cc	2012-01-12 00:06:07.000000000 -0200
+++ rtv-Stage-c318423-fixed/libstageplugin/p_simulation.cc	2012-01-26 23:20:31.456378507 -0200
@@ -152,13 +152,13 @@
 		player_msghdr_t* hdr,
 		void* data)
 {
-	if(Message::MatchMessage(hdr, PLAYER_MSGTYPE_REQ, PLAYER_CAPABILITIES_REQ, addr))
+	if(Message::MatchMessage(hdr, PLAYER_MSGTYPE_REQ, PLAYER_CAPABILTIES_REQ, addr))
 	{
 		PLAYER_ERROR1("%p\n", data);
 		player_capabilities_req_t & cap_req = * reinterpret_cast<player_capabilities_req_t *> (data);
 		if (cap_req.type == PLAYER_MSGTYPE_REQ && (cap_req.subtype == PLAYER_SIMULATION_REQ_SET_POSE3D || cap_req.subtype == PLAYER_SIMULATION_REQ_GET_POSE3D))
 		{
-			this->driver->Publish(addr, resp_queue, PLAYER_MSGTYPE_RESP_ACK, PLAYER_CAPABILITIES_REQ);
+			this->driver->Publish(addr, resp_queue, PLAYER_MSGTYPE_RESP_ACK, PLAYER_CAPABILTIES_REQ);
 			return 0;
 		}
 	}
